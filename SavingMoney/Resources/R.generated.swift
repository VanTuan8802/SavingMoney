//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var font: font { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func font(bundle: Foundation.Bundle) -> font {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.font.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.string` struct is generated, and contains static references to 1 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var localizable: localizable { .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale)) }

    func localizable(preferredLanguages: [String]) -> localizable {
      .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.localizable` struct is generated, and contains static references to 42 localization keys.
    struct localizable {
      let source: RswiftResources.StringResource.Source

      /// en translation: Account creation failed. Please check your information.
      ///
      /// Key: accountCreationFaild
      ///
      /// Locales: en
      var accountCreationFaild: RswiftResources.StringResource { .init(key: "accountCreationFaild", tableName: "Localizable", source: source, developmentValue: "Account creation failed. Please check your information.", comment: nil) }

      /// en translation: Already have an account?
      ///
      /// Key: alreadyHaveAnAccount
      ///
      /// Locales: en
      var alreadyHaveAnAccount: RswiftResources.StringResource { .init(key: "alreadyHaveAnAccount", tableName: "Localizable", source: source, developmentValue: "Already have an account?", comment: nil) }

      /// en translation: Camera
      ///
      /// Key: camera
      ///
      /// Locales: en
      var camera: RswiftResources.StringResource { .init(key: "camera", tableName: "Localizable", source: source, developmentValue: "Camera", comment: nil) }

      /// en translation: Cancle
      ///
      /// Key: cancle
      ///
      /// Locales: en
      var cancle: RswiftResources.StringResource { .init(key: "cancle", tableName: "Localizable", source: source, developmentValue: "Cancle", comment: nil) }

      /// en translation: Confirm Password
      ///
      /// Key: confirmPassword
      ///
      /// Locales: en
      var confirmPassword: RswiftResources.StringResource { .init(key: "confirmPassword", tableName: "Localizable", source: source, developmentValue: "Confirm Password", comment: nil) }

      /// en translation: Continue
      ///
      /// Key: continue
      ///
      /// Locales: en
      var `continue`: RswiftResources.StringResource { .init(key: "continue", tableName: "Localizable", source: source, developmentValue: "Continue", comment: nil) }

      /// en translation: Continue as Guest mode
      ///
      /// Key: countinueAsGuest
      ///
      /// Locales: en
      var countinueAsGuest: RswiftResources.StringResource { .init(key: "countinueAsGuest", tableName: "Localizable", source: source, developmentValue: "Continue as Guest mode", comment: nil) }

      /// en translation: Create   an account
      ///
      /// Key: createAnAccount
      ///
      /// Locales: en
      var createAnAccount: RswiftResources.StringResource { .init(key: "createAnAccount", tableName: "Localizable", source: source, developmentValue: "Create \n an account", comment: nil) }

      /// en translation: Don’t have an account?
      ///
      /// Key: donnotHaveAcount
      ///
      /// Locales: en
      var donnotHaveAcount: RswiftResources.StringResource { .init(key: "donnotHaveAcount", tableName: "Localizable", source: source, developmentValue: "Don’t have an account?", comment: nil) }

      /// en translation: Email
      ///
      /// Key: emailAddress
      ///
      /// Locales: en
      var emailAddress: RswiftResources.StringResource { .init(key: "emailAddress", tableName: "Localizable", source: source, developmentValue: "Email", comment: nil) }

      /// en translation: Fogot Password?
      ///
      /// Key: forgotPassword
      ///
      /// Locales: en
      var forgotPassword: RswiftResources.StringResource { .init(key: "forgotPassword", tableName: "Localizable", source: source, developmentValue: "Fogot Password?", comment: nil) }

      /// en translation: Hello, Welcome to
      ///
      /// Key: helloWelcomeTo
      ///
      /// Locales: en
      var helloWelcomeTo: RswiftResources.StringResource { .init(key: "helloWelcomeTo", tableName: "Localizable", source: source, developmentValue: "Hello, Welcome to", comment: nil) }

      /// en translation: Incorrect login or password
      ///
      /// Key: incorrectLoginOrPassword
      ///
      /// Locales: en
      var incorrectLoginOrPassword: RswiftResources.StringResource { .init(key: "incorrectLoginOrPassword", tableName: "Localizable", source: source, developmentValue: "Incorrect login or password", comment: nil) }

      /// en translation: Language
      ///
      /// Key: language
      ///
      /// Locales: en
      var language: RswiftResources.StringResource { .init(key: "language", tableName: "Localizable", source: source, developmentValue: "Language", comment: nil) }

      /// en translation: Login Fail
      ///
      /// Key: loginFail
      ///
      /// Locales: en
      var loginFail: RswiftResources.StringResource { .init(key: "loginFail", tableName: "Localizable", source: source, developmentValue: "Login Fail", comment: nil) }

      /// en translation: Money Manager!
      ///
      /// Key: moneyManager
      ///
      /// Locales: en
      var moneyManager: RswiftResources.StringResource { .init(key: "moneyManager", tableName: "Localizable", source: source, developmentValue: "Money Manager!", comment: nil) }

      /// en translation: Next
      ///
      /// Key: next
      ///
      /// Locales: en
      var next: RswiftResources.StringResource { .init(key: "next", tableName: "Localizable", source: source, developmentValue: "Next", comment: nil) }

      /// en translation: No user found with this email address.
      ///
      /// Key: noUserWithEmail
      ///
      /// Locales: en
      var noUserWithEmail: RswiftResources.StringResource { .init(key: "noUserWithEmail", tableName: "Localizable", source: source, developmentValue: "No user found with this email address.", comment: nil) }

      /// en translation: OK
      ///
      /// Key: ok
      ///
      /// Locales: en
      var ok: RswiftResources.StringResource { .init(key: "ok", tableName: "Localizable", source: source, developmentValue: "OK", comment: nil) }

      /// en translation: Smart expense tracking, easy to manage
      ///
      /// Key: onboard_content_1
      ///
      /// Locales: en
      var onboard_content_1: RswiftResources.StringResource { .init(key: "onboard_content_1", tableName: "Localizable", source: source, developmentValue: "Smart expense tracking, easy to manage", comment: nil) }

      /// en translation: Smart chart for monthly financial   management reporting
      ///
      /// Key: onboard_content_2
      ///
      /// Locales: en
      var onboard_content_2: RswiftResources.StringResource { .init(key: "onboard_content_2", tableName: "Localizable", source: source, developmentValue: "Smart chart for monthly financial \n management reporting", comment: nil) }

      /// en translation: Clear income classification with six   recommended spending jars.
      ///
      /// Key: onboard_content_3
      ///
      /// Locales: en
      var onboard_content_3: RswiftResources.StringResource { .init(key: "onboard_content_3", tableName: "Localizable", source: source, developmentValue: "Clear income classification with six \n recommended spending jars.", comment: nil) }

      /// en translation: Loans are clearly and tightly categorized.
      ///
      /// Key: onboard_content_4
      ///
      /// Locales: en
      var onboard_content_4: RswiftResources.StringResource { .init(key: "onboard_content_4", tableName: "Localizable", source: source, developmentValue: "Loans are clearly and tightly categorized.", comment: nil) }

      /// en translation: Financial management
      ///
      /// Key: onboard_title_1
      ///
      /// Locales: en
      var onboard_title_1: RswiftResources.StringResource { .init(key: "onboard_title_1", tableName: "Localizable", source: source, developmentValue: "Financial management", comment: nil) }

      /// en translation: Expense analysis chart
      ///
      /// Key: onboard_title_2
      ///
      /// Locales: en
      var onboard_title_2: RswiftResources.StringResource { .init(key: "onboard_title_2", tableName: "Localizable", source: source, developmentValue: "Expense analysis chart", comment: nil) }

      /// en translation: Expense classification
      ///
      /// Key: onboard_title_3
      ///
      /// Locales: en
      var onboard_title_3: RswiftResources.StringResource { .init(key: "onboard_title_3", tableName: "Localizable", source: source, developmentValue: "Expense classification", comment: nil) }

      /// en translation: Debt management
      ///
      /// Key: onboard_title_4
      ///
      /// Locales: en
      var onboard_title_4: RswiftResources.StringResource { .init(key: "onboard_title_4", tableName: "Localizable", source: source, developmentValue: "Debt management", comment: nil) }

      /// en translation: Open Email
      ///
      /// Key: openEmail
      ///
      /// Locales: en
      var openEmail: RswiftResources.StringResource { .init(key: "openEmail", tableName: "Localizable", source: source, developmentValue: "Open Email", comment: nil) }

      /// en translation: Open email to confirm link
      ///
      /// Key: openEmailToConfirmLink
      ///
      /// Locales: en
      var openEmailToConfirmLink: RswiftResources.StringResource { .init(key: "openEmailToConfirmLink", tableName: "Localizable", source: source, developmentValue: "Open email to confirm link", comment: nil) }

      /// en translation: Or Sign Up with
      ///
      /// Key: orSignUp
      ///
      /// Locales: en
      var orSignUp: RswiftResources.StringResource { .init(key: "orSignUp", tableName: "Localizable", source: source, developmentValue: "Or Sign Up with", comment: nil) }

      /// en translation: Password
      ///
      /// Key: password
      ///
      /// Locales: en
      var password: RswiftResources.StringResource { .init(key: "password", tableName: "Localizable", source: source, developmentValue: "Password", comment: nil) }

      /// en translation: The password is too weak. Please choose a stronger password.
      ///
      /// Key: passwordIsTooWeak
      ///
      /// Locales: en
      var passwordIsTooWeak: RswiftResources.StringResource { .init(key: "passwordIsTooWeak", tableName: "Localizable", source: source, developmentValue: "The password is too weak. Please choose a stronger password.", comment: nil) }

      /// en translation: Passwords do not match.
      ///
      /// Key: passwordNoMatch
      ///
      /// Locales: en
      var passwordNoMatch: RswiftResources.StringResource { .init(key: "passwordNoMatch", tableName: "Localizable", source: source, developmentValue: "Passwords do not match.", comment: nil) }

      /// en translation: Permission
      ///
      /// Key: permission
      ///
      /// Locales: en
      var permission: RswiftResources.StringResource { .init(key: "permission", tableName: "Localizable", source: source, developmentValue: "Permission", comment: nil) }

      /// en translation: Money manager need the following permissions to work properly
      ///
      /// Key: permissionMessage
      ///
      /// Locales: en
      var permissionMessage: RswiftResources.StringResource { .init(key: "permissionMessage", tableName: "Localizable", source: source, developmentValue: "Money manager need the following permissions to work properly", comment: nil) }

      /// en translation: Photo
      ///
      /// Key: photo
      ///
      /// Locales: en
      var photo: RswiftResources.StringResource { .init(key: "photo", tableName: "Localizable", source: source, developmentValue: "Photo", comment: nil) }

      /// en translation: Sign In
      ///
      /// Key: signIn
      ///
      /// Locales: en
      var signIn: RswiftResources.StringResource { .init(key: "signIn", tableName: "Localizable", source: source, developmentValue: "Sign In", comment: nil) }

      /// en translation: Sign Up
      ///
      /// Key: signUp
      ///
      /// Locales: en
      var signUp: RswiftResources.StringResource { .init(key: "signUp", tableName: "Localizable", source: source, developmentValue: "Sign Up", comment: nil) }

      /// en translation: The email address is badly formatted.
      ///
      /// Key: theEmailAdressIsBadlyFormated
      ///
      /// Locales: en
      var theEmailAdressIsBadlyFormated: RswiftResources.StringResource { .init(key: "theEmailAdressIsBadlyFormated", tableName: "Localizable", source: source, developmentValue: "The email address is badly formatted.", comment: nil) }

      /// en translation: The email address is already in use by another account.
      ///
      /// Key: theEmailAdressIsUsed
      ///
      /// Locales: en
      var theEmailAdressIsUsed: RswiftResources.StringResource { .init(key: "theEmailAdressIsUsed", tableName: "Localizable", source: source, developmentValue: "The email address is already in use by another account.", comment: nil) }

      /// en translation: This action can contain ads
      ///
      /// Key: thisActionCanContainAds
      ///
      /// Locales: en
      var thisActionCanContainAds: RswiftResources.StringResource { .init(key: "thisActionCanContainAds", tableName: "Localizable", source: source, developmentValue: "This action can contain ads", comment: nil) }

      /// en translation: Welcome back! Please enter your detail.
      ///
      /// Key: welcomeBack
      ///
      /// Locales: en
      var welcomeBack: RswiftResources.StringResource { .init(key: "welcomeBack", tableName: "Localizable", source: source, developmentValue: "Welcome back! Please enter your detail.", comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 7 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }

    /// Color `black1B`.
    var black1B: RswiftResources.ColorResource { .init(name: "black1B", path: [], bundle: bundle) }

    /// Color `blue4F`.
    var blue4F: RswiftResources.ColorResource { .init(name: "blue4F", path: [], bundle: bundle) }

    /// Color `grey48`.
    var grey48: RswiftResources.ColorResource { .init(name: "grey48", path: [], bundle: bundle) }

    /// Color `greyAF`.
    var greyAF: RswiftResources.ColorResource { .init(name: "greyAF", path: [], bundle: bundle) }

    /// Color `purple8B`.
    var purple8B: RswiftResources.ColorResource { .init(name: "purple8B", path: [], bundle: bundle) }

    /// Color `whiteE6`.
    var whiteE6: RswiftResources.ColorResource { .init(name: "whiteE6", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 19 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `buttonBack`.
    var buttonBack: RswiftResources.ImageResource { .init(name: "buttonBack", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `buttonDone`.
    var buttonDone: RswiftResources.ImageResource { .init(name: "buttonDone", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `coin`.
    var coin: RswiftResources.ImageResource { .init(name: "coin", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `english`.
    var english: RswiftResources.ImageResource { .init(name: "english", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `facebook`.
    var facebook: RswiftResources.ImageResource { .init(name: "facebook", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `french`.
    var french: RswiftResources.ImageResource { .init(name: "french", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `google`.
    var google: RswiftResources.ImageResource { .init(name: "google", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `hindi`.
    var hindi: RswiftResources.ImageResource { .init(name: "hindi", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon`.
    var icon: RswiftResources.ImageResource { .init(name: "icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `intro1`.
    var intro1: RswiftResources.ImageResource { .init(name: "intro1", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `intro2`.
    var intro2: RswiftResources.ImageResource { .init(name: "intro2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `intro3`.
    var intro3: RswiftResources.ImageResource { .init(name: "intro3", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `intro4`.
    var intro4: RswiftResources.ImageResource { .init(name: "intro4", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `login`.
    var login: RswiftResources.ImageResource { .init(name: "login", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `permission`.
    var permission: RswiftResources.ImageResource { .init(name: "permission", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `portugeese`.
    var portugeese: RswiftResources.ImageResource { .init(name: "portugeese", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `register`.
    var register: RswiftResources.ImageResource { .init(name: "register", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `spanish`.
    var spanish: RswiftResources.ImageResource { .init(name: "spanish", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `splash`.
    var splash: RswiftResources.ImageResource { .init(name: "splash", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.font` struct is generated, and contains static references to 4 fonts.
  struct font: Sequence {
    let bundle: Foundation.Bundle

    /// Font `Poppins-Bold`.
    var poppinsBold: RswiftResources.FontResource { .init(name: "Poppins-Bold", bundle: bundle, filename: "Poppins-Bold.ttf") }

    /// Font `Poppins-Medium`.
    var poppinsMedium: RswiftResources.FontResource { .init(name: "Poppins-Medium", bundle: bundle, filename: "Poppins-Medium.ttf") }

    /// Font `Poppins-Regular`.
    var poppinsRegular: RswiftResources.FontResource { .init(name: "Poppins-Regular", bundle: bundle, filename: "Poppins-Regular.ttf") }

    /// Font `Poppins-SemiBold`.
    var poppinsSemiBold: RswiftResources.FontResource { .init(name: "Poppins-SemiBold", bundle: bundle, filename: "Poppins-SemiBold.ttf") }

    func makeIterator() -> IndexingIterator<[RswiftResources.FontResource]> {
      [poppinsBold, poppinsMedium, poppinsRegular, poppinsSemiBold].makeIterator()
    }
    func validate() throws {
      for font in self {
        if !font.canBeLoaded() { throw RswiftResources.ValidationError("[R.swift] Font '\(font.name)' could not be loaded, is '\(font.filename)' added to the UIAppFonts array in this targets Info.plist?") }
      }
    }
  }

  /// This `_R.file` struct is generated, and contains static references to 6 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `Animation.json`.
    var animationJson: RswiftResources.FileResource { .init(name: "Animation", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `GoogleService-Info.plist`.
    var googleServiceInfoPlist: RswiftResources.FileResource { .init(name: "GoogleService-Info", pathExtension: "plist", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Poppins-Bold.ttf`.
    var poppinsBoldTtf: RswiftResources.FileResource { .init(name: "Poppins-Bold", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Poppins-Medium.ttf`.
    var poppinsMediumTtf: RswiftResources.FileResource { .init(name: "Poppins-Medium", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Poppins-Regular.ttf`.
    var poppinsRegularTtf: RswiftResources.FileResource { .init(name: "Poppins-Regular", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Poppins-SemiBold.ttf`.
    var poppinsSemiBoldTtf: RswiftResources.FileResource { .init(name: "Poppins-SemiBold", pathExtension: "ttf", bundle: bundle, locale: LocaleReference.none) }
  }
}